version: "3.4"

networks:
  beNetwork:
  feNetwork:
  
services:
  #DATABASE
  database:
    container_name: PostsByMarko.PostgresServer
    image: postgres:17
    environment: 
      POSTGRES_DB: postsbymarko
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    user: root
    ports:
      - ${SQL_PORT}:${SQL_PORT}
    networks:
      - beNetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
   
  #HOST
  host:
    container_name: PostsByMarko.Host
    build:
      context: .
      dockerfile: src/PostsByMarko.Host/Dockerfile
    ports:
      - ${HOST_PORT}:${HOST_PORT}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - beNetwork
      - feNetwork
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:${HOST_PORT}

  #CLIENT
  client:
    container_name: PostsByMarko.Client
    build:
      context: .
      dockerfile: src/PostsByMarko.Client/Dockerfile
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    depends_on:
      - host
    volumes:
      - ./src:/app/src
    networks:
      - feNetwork
    environment:
      - NODE_ENV=docker

